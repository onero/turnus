var turnusApp=angular.module("turnusApp",["ui.router","ngResource","lbServices"]).config(function(LoopBackResourceProvider){LoopBackResourceProvider.setUrlBase("https://turnus-server.herokuapp.com/api")});angular.module("turnusApp").controller("mainCtrl",function($scope,Member){function getMembers(){$scope.members=Member.find()}function clearInput(){$scope.member={firstname:"",lastname:"",position:""}}$scope.reset=function(){for(var i=0;i<$scope.members.length;i++)$scope.members[i].available1=!0,$scope.members[i].available2=!0,$scope.members[i].available3=!0,$scope.members[i].available4=!0,$scope.members[i].available5=!0,$scope.members[i].chosen1=!1,$scope.members[i].chosen2=!1,$scope.members[i].chosen3=!1,$scope.members[i].chosen4=!1,$scope.members[i].chosen5=!1,$scope.members[i].$save(),console.log("Reset")},$scope.selectAll1=function(){for(var i=0;i<$scope.members.length;i++)1==$scope.members[i].available1&&($scope.members[i].chosen1=!0,$scope.members[i].$save())},$scope.unselectAll1=function(){for(var i=0;i<$scope.members.length;i++)1==$scope.members[i].chosen1&&($scope.members[i].chosen1=!1,$scope.members[i].$save())},$scope.selectAll2=function(){for(var i=0;i<$scope.members.length;i++)1==$scope.members[i].available2&&($scope.members[i].chosen2=!0,$scope.members[i].$save())},$scope.unselectAll2=function(){for(var i=0;i<$scope.members.length;i++)1==$scope.members[i].chosen2&&($scope.members[i].chosen2=!1,$scope.members[i].$save())},$scope.selectAll3=function(){for(var i=0;i<$scope.members.length;i++)1==$scope.members[i].available3&&($scope.members[i].chosen3=!0,$scope.members[i].$save())},$scope.unselectAll3=function(){for(var i=0;i<$scope.members.length;i++)1==$scope.members[i].chosen3&&($scope.members[i].chosen3=!1,$scope.members[i].$save())},$scope.selectAll4=function(){for(var i=0;i<$scope.members.length;i++)1==$scope.members[i].available4&&($scope.members[i].chosen4=!0,$scope.members[i].$save())},$scope.unselectAll4=function(){for(var i=0;i<$scope.members.length;i++)1==$scope.members[i].chosen4&&($scope.members[i].chosen4=!1,$scope.members[i].$save())},$scope.selectAll5=function(){for(var i=0;i<$scope.members.length;i++)1==$scope.members[i].available5&&($scope.members[i].chosen5=!0,$scope.members[i].$save())},$scope.unselectAll5=function(){for(var i=0;i<$scope.members.length;i++)1==$scope.members[i].chosen5&&($scope.members[i].chosen5=!1,$scope.members[i].$save())},$scope.available1=function(){this.member.available1=!this.member.available1,this.member.$save()},$scope.available2=function(){this.member.available2=!this.member.available2,this.member.$save()},$scope.available3=function(){this.member.available3=!this.member.available3,this.member.$save()},$scope.available4=function(){this.member.available4=!this.member.available4,this.member.$save()},$scope.available5=function(){this.member.available5=!this.member.available5,this.member.$save()},$scope.chosen1=function(){this.member.chosen1=!this.member.chosen1,this.member.$save()},$scope.chosen2=function(){this.member.chosen2=!this.member.chosen2,this.member.$save()},$scope.chosen3=function(){this.member.chosen3=!this.member.chosen3,this.member.$save()},$scope.chosen4=function(){this.member.chosen4=!this.member.chosen4,this.member.$save()},$scope.chosen5=function(){this.member.chosen5=!this.member.chosen5,this.member.$save()},$scope.addMember=function(){Member.create($scope.member);$scope.members.push(Member),getMembers(),clearInput()},$scope.removeMember=function(){Member.deleteById({id:this.member.id}).$promise.then(function(){getMembers()})},getMembers()}),turnusApp.config(function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/home"),$stateProvider.state("home",{url:"/home",templateUrl:"views/home.html",controller:"mainCtrl"}).state("turnus",{url:"/turnus",templateUrl:"views/turnus.html",controller:"mainCtrl"}).state("workers",{url:"/workers",templateUrl:"views/workers.html",controller:"mainCtrl"})}),function(window,angular,undefined){"use strict";function getHost(url){var m=url.match(/^(?:https?:)?\/\/([^\/]+)/);return m?m[1]:null}var urlBase="/api",authHeader="authorization",urlBaseHost=getHost(urlBase)||location.host,module=angular.module("lbServices",["ngResource"]);module.factory("User",["LoopBackResource","LoopBackAuth","$injector",function(Resource,LoopBackAuth,$injector){var R=Resource(urlBase+"/Users/:id",{id:"@id"},{prototype$__findById__accessTokens:{params:{fk:"@fk"},url:urlBase+"/Users/:id/accessTokens/:fk",method:"GET"},prototype$__destroyById__accessTokens:{params:{fk:"@fk"},url:urlBase+"/Users/:id/accessTokens/:fk",method:"DELETE"},prototype$__updateById__accessTokens:{params:{fk:"@fk"},url:urlBase+"/Users/:id/accessTokens/:fk",method:"PUT"},prototype$__get__accessTokens:{isArray:!0,url:urlBase+"/Users/:id/accessTokens",method:"GET"},prototype$__create__accessTokens:{url:urlBase+"/Users/:id/accessTokens",method:"POST"},prototype$__delete__accessTokens:{url:urlBase+"/Users/:id/accessTokens",method:"DELETE"},prototype$__count__accessTokens:{url:urlBase+"/Users/:id/accessTokens/count",method:"GET"},create:{url:urlBase+"/Users",method:"POST"},createMany:{isArray:!0,url:urlBase+"/Users",method:"POST"},upsert:{url:urlBase+"/Users",method:"PUT"},exists:{url:urlBase+"/Users/:id/exists",method:"GET"},findById:{url:urlBase+"/Users/:id",method:"GET"},find:{isArray:!0,url:urlBase+"/Users",method:"GET"},findOne:{url:urlBase+"/Users/findOne",method:"GET"},updateAll:{url:urlBase+"/Users/update",method:"POST"},deleteById:{url:urlBase+"/Users/:id",method:"DELETE"},count:{url:urlBase+"/Users/count",method:"GET"},prototype$updateAttributes:{url:urlBase+"/Users/:id",method:"PUT"},createChangeStream:{url:urlBase+"/Users/change-stream",method:"POST"},login:{params:{include:"user"},interceptor:{response:function(response){var accessToken=response.data;return LoopBackAuth.setUser(accessToken.id,accessToken.userId,accessToken.user),LoopBackAuth.rememberMe=response.config.params.rememberMe!==!1,LoopBackAuth.save(),response.resource}},url:urlBase+"/Users/login",method:"POST"},logout:{interceptor:{response:function(response){return LoopBackAuth.clearUser(),LoopBackAuth.clearStorage(),response.resource}},url:urlBase+"/Users/logout",method:"POST"},confirm:{url:urlBase+"/Users/confirm",method:"GET"},resetPassword:{url:urlBase+"/Users/reset",method:"POST"},getCurrent:{url:urlBase+"/Users/:id",method:"GET",params:{id:function(){var id=LoopBackAuth.currentUserId;return null==id&&(id="__anonymous__"),id}},interceptor:{response:function(response){return LoopBackAuth.currentUserData=response.data,response.resource}},__isGetCurrentUser__:!0}});return R.updateOrCreate=R.upsert,R.update=R.updateAll,R.destroyById=R.deleteById,R.removeById=R.deleteById,R.getCachedCurrent=function(){var data=LoopBackAuth.currentUserData;return data?new R(data):null},R.isAuthenticated=function(){return null!=this.getCurrentId()},R.getCurrentId=function(){return LoopBackAuth.currentUserId},R.modelName="User",R}]),module.factory("Person",["LoopBackResource","LoopBackAuth","$injector",function(Resource,LoopBackAuth,$injector){var R=Resource(urlBase+"/people/:id",{id:"@id"},{create:{url:urlBase+"/people",method:"POST"},createMany:{isArray:!0,url:urlBase+"/people",method:"POST"},upsert:{url:urlBase+"/people",method:"PUT"},exists:{url:urlBase+"/people/:id/exists",method:"GET"},findById:{url:urlBase+"/people/:id",method:"GET"},find:{isArray:!0,url:urlBase+"/people",method:"GET"},findOne:{url:urlBase+"/people/findOne",method:"GET"},updateAll:{url:urlBase+"/people/update",method:"POST"},deleteById:{url:urlBase+"/people/:id",method:"DELETE"},count:{url:urlBase+"/people/count",method:"GET"},prototype$updateAttributes:{url:urlBase+"/people/:id",method:"PUT"},createChangeStream:{url:urlBase+"/people/change-stream",method:"POST"}});return R.updateOrCreate=R.upsert,R.update=R.updateAll,R.destroyById=R.deleteById,R.removeById=R.deleteById,R.modelName="Person",R}]),module.factory("Member",["LoopBackResource","LoopBackAuth","$injector",function(Resource,LoopBackAuth,$injector){var R=Resource(urlBase+"/Members/:id",{id:"@id"},{create:{url:urlBase+"/Members",method:"POST"},createMany:{isArray:!0,url:urlBase+"/Members",method:"POST"},upsert:{url:urlBase+"/Members",method:"PUT"},exists:{url:urlBase+"/Members/:id/exists",method:"GET"},findById:{url:urlBase+"/Members/:id",method:"GET"},find:{isArray:!0,url:urlBase+"/Members",method:"GET"},findOne:{url:urlBase+"/Members/findOne",method:"GET"},updateAll:{url:urlBase+"/Members/update",method:"POST"},deleteById:{url:urlBase+"/Members/:id",method:"DELETE"},count:{url:urlBase+"/Members/count",method:"GET"},prototype$updateAttributes:{url:urlBase+"/Members/:id",method:"PUT"},createChangeStream:{url:urlBase+"/Members/change-stream",method:"POST"}});return R.updateOrCreate=R.upsert,R.update=R.updateAll,R.destroyById=R.deleteById,R.removeById=R.deleteById,R.modelName="Member",R}]),module.factory("LoopBackAuth",function(){function LoopBackAuth(){var self=this;props.forEach(function(name){self[name]=load(name)}),this.currentUserData=null}function save(storage,name,value){var key=propsPrefix+name;null==value&&(value=""),storage[key]=value}function load(name){var key=propsPrefix+name;return localStorage[key]||sessionStorage[key]||null}var props=["accessTokenId","currentUserId","rememberMe"],propsPrefix="$LoopBack$";return LoopBackAuth.prototype.save=function(){var self=this,storage=this.rememberMe?localStorage:sessionStorage;props.forEach(function(name){save(storage,name,self[name])})},LoopBackAuth.prototype.setUser=function(accessTokenId,userId,userData){this.accessTokenId=accessTokenId,this.currentUserId=userId,this.currentUserData=userData},LoopBackAuth.prototype.clearUser=function(){this.accessTokenId=null,this.currentUserId=null,this.currentUserData=null},LoopBackAuth.prototype.clearStorage=function(){props.forEach(function(name){save(sessionStorage,name,null),save(localStorage,name,null)})},new LoopBackAuth}).config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push("LoopBackAuthRequestInterceptor")}]).factory("LoopBackAuthRequestInterceptor",["$q","LoopBackAuth",function($q,LoopBackAuth){return{request:function(config){var host=getHost(config.url);if(host&&host!==urlBaseHost)return config;if(LoopBackAuth.accessTokenId)config.headers[authHeader]=LoopBackAuth.accessTokenId;else if(config.__isGetCurrentUser__){var res={body:{error:{status:401}},status:401,config:config,headers:function(){return undefined}};return $q.reject(res)}return config||$q.when(config)}}}]).provider("LoopBackResource",function(){this.setAuthHeader=function(header){authHeader=header},this.setUrlBase=function(url){urlBase=url,urlBaseHost=getHost(urlBase)||location.host},this.getUrlBase=function(){return urlBase},this.$get=["$resource",function($resource){return function(url,params,actions){var resource=$resource(url,params,actions);return resource.prototype.$save=function(success,error){var result=resource.upsert.call(this,{},this,success,error);return result.$promise||result},resource}}]})}(window,window.angular);